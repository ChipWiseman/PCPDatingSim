<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create menu variables
globalvar choice,topChoice,menuOptions,menuChoices,selectorPos;
choice=0; //choice represents the menu option selected.
topChoice=0; //topChoice represents the highest option being shown by the menu at present.
selectorPos=0; //selectorPos represents the position of the selector (0=top,1=middle,2=bottom in this case - this will depend on how many choices you have)
//The following code is creating the menu options:
globalvar dialogue_list;
dialogue_list = ds_list_create();
ds_list_add(dialogue_list,"Option 1","Option 2","Option 3");//,"Option 2","Option 3","Option 4","Option 5","Option 6");

time = 0;
spd = 2;
alpha = 0;
font_size = font_get_size(fnt_text);

instance_create(x,y,DialogueSelector);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for keyboard input
if(keyboard_check_pressed(vk_down)){ //If down button is pressed:
    //Make menu choice go down one
    if(selectorPos&lt;2){ //If the selector is not selecting the bottom menu choice
        selectorPos++; //Increase the selector position by one
    }
    else if(topChoice+2&lt;ds_list_size(dialogue_list)-1){ //If there's more options below the bottom option
        topChoice++; //Increase topChoice by one
    }
}
else if(keyboard_check_pressed(vk_up)){ //If up button is pressed:
    //Make menu choice go up one
    if(selectorPos&gt;0){ //If the selector is not selecting the bottom menu choice
        selectorPos--; //Increase the selector position by one
    }
    else if(topChoice&gt;0){ //If there's more options above the top option
        topChoice--; //Decrease topChoice by one
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu choices as text
draw_set_font(fnt_text); //Sets font
draw_set_alpha(alpha);
if(alpha&lt;1) alpha += spd/10; else alpha = 1;
draw_set_color(c_black);
draw_rectangle(x,y,x+window_get_width()-1,y+window_get_height()/4-1,0);
draw_set_color(c_green);
draw_rectangle(x,y,x+window_get_width()-1,y+window_get_height()/4-1,10);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
if(ds_list_size(dialogue_list)!=0)
{
    if(ds_list_size(dialogue_list)&gt;=1)
    {
        draw_text_ext
        (
            x+font_size/4,
            y+font_size/4,
            ds_list_find_value(dialogue_list, topChoice),
            font_size+(font_size/3),
            x+window_get_width()-1
        );
    }
    if(ds_list_size(dialogue_list)&gt;=2)
    {
        draw_text_ext
        (
            x+font_size/4,
            y+font_size/4 + font_size + font_size + font_size/4,
            ds_list_find_value(dialogue_list, topChoice+1),
            font_size+(font_size/3),
            x+window_get_width()-1
        );
    }
    if(ds_list_size(dialogue_list)&gt;=3)
    {
        draw_text_ext
        (
            x+font_size/4,
            y+(font_size/4 + font_size + font_size + font_size/4)*2,
            ds_list_find_value(dialogue_list, topChoice+2),
            font_size+(font_size/3),
            x+window_get_width()-1
        );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
